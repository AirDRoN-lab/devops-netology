default:
  tags:
    - home

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

# workflow:
#   rules:
#     - if: $CI_COMMIT_TITLE =~ /draft$/
#       when: never

stages:          
  - preinfrabuild
  - infrabuild
#  - infradestroy

yc-install:  # Установка yc и подотовка артефактов   
  stage: preinfrabuild
  image: dgolodnikov/u2204_glimage_v1:1.2.1 # Образ с базовыми утилитами (curl, git, net-tools, etc)
  when: manual
  script:
    - echo "MAIN. Installing YaCloud CLI App..."
    - curl https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash -s -- -i yc -n
    - export PATH=$PATH:yc/bin 
    - yc --version
    - echo -e "YC_PATH=yc/bin" > variables01.env
  artifacts: # Подготовка артифактов на последюущей job
    when: on_success
    paths:
      - yc/bin
    reports:
      dotenv: variables01.env

trf-preapply: # Создание YaCloud SA и S3. Инициализация terraform
  stage: preinfrabuild
  needs: [yc-install]
  image: 
    name: hashicorp/terraform:1.4 # Базовый образ с terraform 1.4
    entrypoint: [""]
  before_script:
    - echo "PREPARE. YaCloud CLI App configuring"
    - export PATH=$PATH:$YC_PATH
    - yc --version
    - terraform --version
    - apk update
    - apk add jq 
  script:
    - echo "MAIN. Creating S3 and SA in YaCloud"
    - source ./start.sh init # Инициализация обалка YaCloud
    - yc config list
    - source ./start.sh sas3-create # Создание SA и S3 в YaCloud. Идентификаторы в переменных окружения
    - printenv
    - echo -e "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" > variables02.env 
    - echo -e "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> variables02.env 
    - echo -e "TF_VAR_YC_SA_PUBLICKEYID=$YC_SA_PUBLICKEYID" >> variables02.env
    - echo -e "TF_VAR_YC_SA_PUBLICKEY=$YC_SA_PUBLICKEY" >> variables02.env
    - echo -e "TF_VAR_YC_SA_ACCESSKEY=$YC_SA_ACCESSKEY" >> variables02.env
    - echo -e "TF_VAR_YC_TOKEN=$YC_TOKEN" >> variables02.env
    - echo -e "TF_VAR_YC_CLOUD_ID=$YC_CLOUD_ID" >> variables02.env
    - echo -e "TF_VAR_YC_FOLDER_ID=$YC_FOLDER_ID" >> variables02.env
    - echo -e "YC_PATH=$YC_PATH" >> variables02.env
    - cat variables02.env 
  artifacts: # Подготовка артифактов на последюущей job
    when: on_success
    paths:
      - yc/bin
    reports:
      dotenv: variables02.env

trf-apply: # Создание инфраструктуры в YaCloud для развертывания Kuber кластера 
  stage: infrabuild
  when: manual
  image: 
    name: hashicorp/terraform:1.4
    entrypoint: [""]
  before_script:
    - echo "PREPARE. YaCloud CLI App configuring"
    - export PATH=$PATH:$YC_PATH
    - yc --version
    - terraform --version
    - apk update
    - apk add jq 
  script:
    - echo "MAIN. Terraform init and apply starts. Deploying infrastructure"
    - source ./start.sh init # Инициализация облака YaCloud
    - yc config list
    - source ./start.sh infra-create # Создание инфраструктуры YaCloud
    - printenv
  # - source ./start.sh export
    - echo -e "vm_ip1=$vm_ip1" > variables03.env
    - echo -e "vm_ip2=$vm_ip2" >> variables03.env
    - echo -e "vm_ip3=$vm_ip3" >> variables03.env
    - echo -e "vm_ip1int=$vm_ip1int" >> variables03.env
    - echo -e "vm_ip2int=$vm_ip2int" >> variables03.env
    - echo -e "vm_ip3int=$vm_ip3int" >> variables03.env 
    - cat variables03.env 
  # artifacts: # Подготовка артифактов на последюущей job
  #   when: on_success
  #   paths:
  #     - yc/bin
  #   reports: 
  #     dotenv: variables03.env


# infra-destroy: # Удаление всей инфраструктуры, запуск в ручном режиме. Сервисный Job
#   stage: infradestroy
#   image: 
#     name: hashicorp/terraform:1.4
#     entrypoint: [""]
#   when: manual
#   before_script: 
#     - echo "PREPARE. YaCloud CLI App configuring"
#     - export PATH=$PATH:$YC_PATH
#     - printenv
#     - yc --version
#     - terraform --version
#     - apk update
#     - apk add jq
#   script:
#     - echo "MAIN. Destroing Yandex infrastructure"
#     - echo "Terraform destroy..."
#     - source ./start.sh init
#     - yc config list
#     - source ./start.sh all-destroy
